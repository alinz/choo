# Define the cluster name.
# Can be id, cid or cluster_id
id: "sample"

# Store type
# Can be st, store, store_type or StoreType
# Possible values are file or memory (case insensitive)
store: "file"

# When using a file store, need to provide the root directory.
# Can be dir or datastore
dir: "/storage"

encrypt: true
encryption_cipher: "AES"
encryption_key: "1234"

file: {
    slice_max_msgs: 10000
    slice_max_bytes: 64MB
    slice_max_age: "0"
    slice_archive_script: "/etc/upload.sh"
}

# Debug flag.
# Can be sd or stand_debug
sd: false

# Trace flag.
# Can be sv or stan_trace
sv: false

# If specified, connects to an external NATS server, otherwise
# starts and embedded server.
# Can be ns, nats_server or nats_server_url
# ns: "nats://localhost:4222"

# This flag creates a TLS connection to the server but without
# the need to use a TLS configuration (no NATS server certificate verification).
secure: false

# Interval at which the server sends an heartbeat to a client,
# expressed as a duration.
# Can be hbi, hb_interval, server_to_client_hb_interval
hb_interval: "10s"

# How long the server waits for a heartbeat response from the client
# before considering it a failed hearbeat. Expressed as a duration.
# Can be hbt, hb_timeout, server_to_client_hb_timeout
hb_timeout: "10s"

# Count of failed hearbeats before server closes the client connection.
# The actual total wait is: (fail count + 1) * (hb interval + hb timeout).
# Can be hbf, hb_fail_count, server_to_client_hb_fail_count
hb_fail_count: 2

# Normally, when a client creates a subscription, the server creates
# an internal subscription to receive its ACKs.
# If lots of subscriptions are created, the number of internal
# subscriptions in the server could be very high. To curb this growth,
# use this parameter to configure a pool of internal ACKs subscriptions.
# Can be ack_subs_pool_size, ack_subscriptions_pool_size
ack_subs_pool_size: 10

# In Fault Tolerance mode, you can start a group of streaming servers
# with only one server being active while others are running in standby
# mode. The FT group is named.
# Can be ft_group, ft_group_name
ft_group: "ft"

# In order to use partitioning, this parameter needs to be set to true
# and the list of channels defined in store_limits/channels section.
# This section then serves two purposes, overriding limits for a given
# channel or adding it to the partition.
partitioning: false

# Define store limits.
# Can be limits, store_limits or StoreLimits.
# See Store Limits chapter below for more details.
store_limits: {
    # Define maximum number of channels.
    # Can be mc, max_channels or MaxChannels
    max_channels: 100

    # Define maximum number of subscriptions per channel.
    # Can be msu, max_sybs, max_subscriptions or MaxSubscriptions
    max_subs: 100

    # Define maximum number of messages per channel.
    # Can be mm, max_msgs, MaxMsgs, max_count or MaxCount, default was 10000
    max_msgs: 0

    # Define total size of messages per channel.
    # Can be mb, max_bytes or MaxBytes. Expressed in bytes, default was 10240000
    max_bytes: 0

    # Define how long messages can stay in the log, expressed
    # as a duration, for example: "24h" or "1h15m", etc...
    # Can be ma, max_age, MaxAge.
    max_age: "0", 

    channels: {
        "a.b.c": {
        }
    }
}

# TLS configuration.
tls: {
    client_cert: "/etc/cert/service.crt"
    client_key: "/etc/cert/service.key"
    client_ca: "/etc/cert/ca.crt"
}
